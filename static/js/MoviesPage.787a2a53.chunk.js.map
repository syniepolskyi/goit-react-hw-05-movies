{"version":3,"file":"static/js/MoviesPage.787a2a53.chunk.js","mappings":"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","sources":["components/Error/Error.js","services/apiService.js","services/status.js","services/stylesPagination.js","webpack://goit-react-hw-05-movies-2022/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.js","webpack://goit-react-hw-05-movies-2022/./src/views/MoviesPage/MoviesPage.module.css?0f72","views/MoviesPage/MoviesPage.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport errorImage from '../../img/no_results_found.png';\nimport './Error.css';\n\nexport default function ErrorComponent({ message }) {\n  return (\n    <div role=\"alert\" className=\"wrapper\">\n      <img src={errorImage} width=\"400\" alt=\"no results found\" />\n      <p text={message} className=\"text\">\n        {message}\n      </p>\n    </div>\n  );\n}\n\nErrorComponent.propTypes = {\n  textError: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '92ffb34e08e714eb390805a25b0a06d3';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nasync function getPopularMovies(page) {\n  try {\n    const config = {\n      url: `trending/movie/day`,\n      params: {\n        page,\n      },\n    };\n    const { data } = await axios(config, page);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getMoviesByKeyWord(query, page) {\n  try {\n    const config = {\n      url: `search/movie`,\n      params: {\n        query,\n        page,\n      },\n    };\n    const { data } = await axios(config, query, page);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getMovieById(id) {\n  try {\n    const config = {\n      url: `movie/${id}`,\n    };\n    const { data } = await axios(config, id);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getCastInfo(id) {\n  try {\n    const config = {\n      url: `movie/${id}/credits`,\n    };\n    const { data } = await axios(config, id);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getMovieReview(id) {\n  try {\n    const config = {\n      url: `movie/${id}/reviews`,\n    };\n    const { data } = await axios(config, id);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nconst apiService = {\n  getPopularMovies,\n  getMoviesByKeyWord,\n  getMovieById,\n  getCastInfo,\n  getMovieReview,\n};\n\nexport default apiService;\n","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default Status;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    '& .MuiPaginationItem-page.Mui-selected, & .MuiPaginationItem-page.Mui-selected:hover, & .MuiPaginationItem-page.Mui-selected.Mui-focusVisible,  & .MuiPaginationItem-page:hover, & .MuiPaginationItem-page.Mui-focusVisible':\n      {\n        backgroundColor: '#EC625Fcb',\n      },\n    '& .MuiPaginationItem-root': {\n      color: '#fff',\n    },\n    '& .MuiPaginationItem-page:hover, & .MuiPaginationItem-page.Mui-focusVisible':\n      {\n        opacity: '0.7',\n      },\n    '& .MuiPaginationItem-page.Mui-selected:hover, & .MuiPaginationItem-page.Mui-selected.Mui-focusVisible':\n      {\n        opacity: '1',\n      },\n    '& .MuiPagination-ul': {\n      justifyContent: 'center',\n    },\n  },\n});\n\nexport default useStyles;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"input\":\"SearchBar_input__bIy50\",\"button\":\"SearchBar_button__T7RTc\"};","import { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport styles from './SearchBar.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function SearchBar({ onHandleSubmit, currQuery }) {\n  const [query, setQuery] = useState('');\n  const [done, setDone] = useState(false);\n\n  const handleChangeQuery = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      toast.info('Please enter your query!');\n      return;\n    }\n\n    onHandleSubmit(query);\n  };\n\n  if(currQuery && !query && !done){\n    setQuery(currQuery);\n    setDone(true);\n  }\n  \n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <input\n        type=\"text\"\n        value={query}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Enter movie name...\"\n        onChange={handleChangeQuery}\n        className={styles.input}\n      />\n      <button type=\"submit\" className={styles.button}>\n        Search\n      </button>\n      <ToastContainer />\n    </form>\n  );\n}\n\nSearchBar.propTypes = {\n  onHandleSubmit: PropTypes.func.isRequired,\n  currQuery: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesPage_moviesList__Z-6jD\",\"moviesItem\":\"MoviesPage_moviesItem__3W6cK\",\"movieTitle\":\"MoviesPage_movieTitle__hHuja\",\"poster\":\"MoviesPage_poster__wUT8q\",\"link\":\"MoviesPage_link__GMVyM\"};","import { useState, useEffect } from 'react';\nimport { NavLink, useNavigate, useLocation } from 'react-router-dom';\n\nimport apiService from '../../services/apiService';\nimport { Pagination } from '@material-ui/lab';\nimport useStyles from '../../services/stylesPagination';\nimport Status from '../../services/status';\nimport LoaderComponent from '../../components/Loader';\nimport ErrorComponent from '../../components/Error';\nimport noPhoto from '../../img/no_image.jpg';\nimport SearchBar from '../../components/SearchBar';\nimport styles from './MoviesPage.module.css';\n\nexport default function MoviesPage() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { pathname: url } = location;\n  const [query, setQuery] = useState('');\n  const [totalPage, setTotalPage] = useState(0);\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const page = new URLSearchParams(location.search).get('page') ?? 1;\n\n  useEffect(() => {\n    if (location.search === '') {\n      return;\n    }\n\n    const newSearch = new URLSearchParams(location.search).get('query');\n    setQuery(newSearch, page);\n  }, [location.search, page]);\n\n  useEffect(() => {\n    if (!query) return;\n    setStatus(Status.PENDING);\n    apiService\n      .getMoviesByKeyWord(query, page)\n      .then(({ results, total_pages }) => {\n        if (results.length === 0) {\n          setError(`No results to show for \"${query}!\"`);\n          setStatus(Status.REJECTED);\n          return;\n        }\n\n        setMovies(results);\n        setTotalPage(total_pages);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        console.log(error);\n        setError(error.message);\n        setStatus(Status.REJECTED);\n      });\n  }, [query, page]);\n\n  const searchImages = newSearch => {\n    if (query === newSearch) return;\n    setQuery(newSearch);\n    setMovies(null);\n    setError(null);\n    setStatus(Status.IDLE);\n    navigate({ ...location, search: `query=${newSearch}&page=1` });\n  };\n\n  const onHandlePage = (event, page) => {\n    navigate({ ...location, search: `query=${query}&page=${page}` });\n  };\n\n  return (\n    <>\n      <SearchBar onHandleSubmit={searchImages} currQuery={query} />\n\n      {status === Status.PENDING && <LoaderComponent />}\n\n      {status === Status.REJECTED && (\n        <ErrorComponent message={error} textError=\"Error\" />\n      )}\n\n      {status === Status.RESOLVED && (\n        <>\n          <ul className={styles.moviesList}>\n            {movies.map(movie => (\n              <li key={movie.id} className={styles.moviesItem}>\n                <NavLink\n                  to={`${url}/${movie.id}`}\n                  state={{ getBack: { ...location } }}\n                  className={styles.link}\n                >\n                  <img\n                    src={\n                      movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                        : noPhoto\n                    }\n                    alt={movie.title}\n                    width=\"320\"\n                    className={styles.poster}\n                  />\n                  <p className={styles.movieTitle}>{movie.title}</p>\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n          {totalPage > 1 && (\n            <Pagination\n              className={classes.root}\n              count={totalPage}\n              onChange={onHandlePage}\n              page={Number(page)}\n              showFirstButton\n              showLastButton\n              size=\"large\"\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["ErrorComponent","message","role","className","src","errorImage","width","alt","text","page","config","url","params","axios","data","console","log","error","query","id","cast","results","api_key","language","apiService","getPopularMovies","getMoviesByKeyWord","getMovieById","getCastInfo","getMovieReview","IDLE","PENDING","RESOLVED","REJECTED","useStyles","makeStyles","root","display","justifyContent","backgroundColor","color","opacity","SearchBar","onHandleSubmit","currQuery","useState","setQuery","done","setDone","onSubmit","event","preventDefault","trim","toast","styles","type","value","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","MoviesPage","classes","navigate","useNavigate","location","useLocation","pathname","totalPage","setTotalPage","movies","setMovies","setError","Status","status","setStatus","URLSearchParams","search","get","useEffect","newSearch","then","total_pages","length","catch","Loader","Error","textError","map","movie","to","state","getBack","poster_path","noPhoto","title","Pagination","count","Number","showFirstButton","showLastButton","size"],"sourceRoot":""}